# docker-compose.yml
version: '3.8'

services:
  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:5000/api
      - NEXT_PUBLIC_AI_SERVICE_URL=http://ai-service:3001/api
    depends_on:
      - backend
    networks:
      - kickflip-network

  # Backend Node.js API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://mongodb:27017/kickflip
      - JWT_SECRET=your_jwt_secret_key
      - SESSION_SECRET=your_session_secret
      - FRONTEND_URL=http://localhost:3000
      - AI_SERVICE_URL=http://ai-service:3001
      - GOOGLE_CLIENT_ID=your_google_client_id
      - GOOGLE_CLIENT_SECRET=your_google_client_secret
    depends_on:
      - mongodb
    networks:
      - kickflip-network

  # AI Service
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./ai-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/kickflip_ai
      - OPENAI_API_KEY=your_openai_api_key
    depends_on:
      - mongodb
    networks:
      - kickflip-network

  # MongoDB Database
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - kickflip-network

  # Redis for caching
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kickflip-network

networks:
  kickflip-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
